version: '3.8'

services:
  # PostgreSQL 개발용 데이터베이스
  postgres-dev:
    image: postgres:15
    container_name: aegis-postgres-dev
    environment:
      POSTGRES_USER: aegis
      POSTGRES_PASSWORD: aegis123
      POSTGRES_DB: aegis_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./scripts/init-dev-db.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - aegis-dev

  # Redis 개발용 캐시
  redis-dev:
    image: redis:7-alpine
    container_name: aegis-redis-dev
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_dev_data:/data
    networks:
      - aegis-dev

  # Zookeeper (Kafka 의존성)
  zookeeper-dev:
    image: confluentinc/cp-zookeeper:latest
    container_name: aegis-zookeeper-dev
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - aegis-dev

  # Kafka 개발용 메시지 큐
  kafka-dev:
    image: confluentinc/cp-kafka:latest
    container_name: aegis-kafka-dev
    depends_on:
      - zookeeper-dev
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-dev:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    networks:
      - aegis-dev

  # Elasticsearch (로깅)
  elasticsearch-dev:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.0
    container_name: aegis-elasticsearch-dev
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_dev_data:/usr/share/elasticsearch/data
    networks:
      - aegis-dev

  # Kibana (로그 시각화)
  kibana-dev:
    image: docker.elastic.co/kibana/kibana:8.10.0
    container_name: aegis-kibana-dev
    depends_on:
      - elasticsearch-dev
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch-dev:9200
    networks:
      - aegis-dev

  # Prometheus (메트릭 수집)
  prometheus-dev:
    image: prom/prometheus:latest
    container_name: aegis-prometheus-dev
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus-dev.yml:/etc/prometheus/prometheus.yml
      - prometheus_dev_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - aegis-dev

  # Grafana (메트릭 시각화)
  grafana-dev:
    image: grafana/grafana:latest
    container_name: aegis-grafana-dev
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_dev_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - aegis-dev

  # Jaeger (분산 추적)
  jaeger-dev:
    image: jaegertracing/all-in-one:latest
    container_name: aegis-jaeger-dev
    ports:
      - "16686:16686"
      - "14268:14268"
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - aegis-dev

volumes:
  postgres_dev_data:
  redis_dev_data:
  elasticsearch_dev_data:
  prometheus_dev_data:
  grafana_dev_data:

networks:
  aegis-dev:
    driver: bridge